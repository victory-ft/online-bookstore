@use './colors' as colors;

// @import 'tailwindcss';
@import url('https://fonts.googleapis.com/css2?family=Lexend:wght@100..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

:root {
  --bg-color: #{colors.$charcoal};
  --text-color: #{colors.$light-gray};
}

* {
  box-sizing: border-box;
  font-family: 'Montserrat', sans-serif;
  // outline: 2px solid green;
}

body {
  margin: 0;
  padding: 110px 0 0 0;
  background-color: var(--bg-color);
  color: var(--text-color);
}

.lexend {
  font-family: 'Lexend', sans-serif;
}

.main-content {
  max-width: 1400px;
  margin: 0 auto;
}

// Define a map for primary color classes
$primary-colors: (
  lime: colors.$pastel-lime,
  mint: colors.$mint,
  pink: colors.$soft-pink,
  cream: colors.$cream,
  light-gray: colors.$light-gray,
);

// Mixin for the filled color classes (e.g., .lime, .mint)
@mixin filled-color-class($color) {
  background-color: $color;
  color: var(--bg-color);
}

// Mixin for the outline color classes (e.g., .lime-outline, .mint-outline)
@mixin outline-color-class($color) {
  background-color: var(--bg-color);
  color: $color;
  border: 2px solid $color;

  .category-card-arrow-container {
    border: 1px solid $color !important;
    svg {
      color: $color !important;
    }
  }
}

// Generate color classes using the maps and mixins
@each $name, $color in $primary-colors {
  .#{$name} {
    @include filled-color-class($color);

    &-outline {
      @include outline-color-class($color);
    }
  }
}

.dark-gray {
  background-color: colors.$dark-gray;

  .category-card-arrow-container {
    border-color: var(--text-color);
    svg {
      color: var(--text-color);
    }
  }
  .category-card-text {
    color: var(--text-color);
  }
}

input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

button {
  cursor: pointer;
}
